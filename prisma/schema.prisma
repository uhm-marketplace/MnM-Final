generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
}

model Profile {
  id           Int               @id @default(autoincrement())
  email        String            @unique
  firstName    String?
  lastName     String?
  bio          String?
  title        String?
  picture      String?
  interests    ProfileInterest[]
  projects     ProfileProject[]
  ProjectBuyer ProjectBuyer[]
  Reviews      Reviews[]
}

model Interest {
  id       Int               @id @default(autoincrement())
  name     String            @unique
  profiles ProfileInterest[]
  projects ProjectInterest[]
}

model Project {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  homepage    String?
  description String?
  picture     String?
  price       Float
  profiles    ProfileProject[]
  buyers      ProjectBuyer[]
  interests   ProjectInterest[]
}

model ProfileInterest {
  id         Int      @id @default(autoincrement())
  profileId  Int
  interestId Int
  interest   Interest @relation(fields: [interestId], references: [id])
  profile    Profile  @relation(fields: [profileId], references: [id])
}

model ProfileProject {
  id        Int     @id @default(autoincrement())
  profileId Int
  projectId Int
  profile   Profile @relation(fields: [profileId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])
}

model ProjectInterest {
  id         Int      @id @default(autoincrement())
  projectId  Int
  interestId Int
  interest   Interest @relation(fields: [interestId], references: [id])
  project    Project  @relation(fields: [projectId], references: [id])
}

model ProjectBuyer {
  id        Int      @id @default(autoincrement())
  projectId Int
  profileId Int
  createdAt DateTime @default(now())
  profile   Profile  @relation(fields: [profileId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
}

model Reviews {
  id         Int      @id @default(autoincrement())
  userName   String
  item       String
  rating     Float?
  contact    String
  reviewText String
  profileId  Int?     // Make profileId optional
  profile    Profile? @relation(fields: [profileId], references: [id]) // Make the relation optional
  createdAt  DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
