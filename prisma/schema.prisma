// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // for local development
  // url      = env("DATABASE_URL")
  // for Vercel
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
}

model Profile {
  id        Int               @id @default(autoincrement())
  email     String            @unique
  firstName String?
  lastName  String?
  bio       String?
  title     String?
  picture   String?
  interests ProfileInterest[]
  projects  ProfileProject[]
}

model Interest {
  id       Int               @id @default(autoincrement())
  name     String            @unique
  profiles ProfileInterest[]
  projects ProjectInterest[]
}

model Project {
  id          Int               @id @default(autoincrement())
  name        String            @unique // or change to `title` if preferred
  description String?
  homepage    String?
  picture     String?
  price       Float?            // Added field for price
  buyerId     Int?              // Foreign key to Profile for buyer
  sellerId    Int?              // Foreign key to Profile for seller

  profiles    ProfileProject[]
  interests   ProjectInterest[]

  // Relations for buyer and seller
  buyer       Profile?          @relation("Buyer", fields: [buyerId], references: [id])
  seller      Profile?          @relation("Seller", fields: [sellerId], references: [id])
}

model ProfileInterest {
  id         Int      @id @default(autoincrement())
  profileId  Int
  interestId Int
  interest   Interest @relation(fields: [interestId], references: [id])
  profile    Profile  @relation(fields: [profileId], references: [id])
}

model ProfileProject {
  id        Int     @id @default(autoincrement())
  profileId Int
  projectId Int
  profile   Profile @relation(fields: [profileId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])
}

model ProjectInterest {
  id         Int      @id @default(autoincrement())
  projectId  Int
  interestId Int
  interest   Interest @relation(fields: [interestId], references: [id])
  project    Project  @relation(fields: [projectId], references: [id])
}

enum Role {
  USER
  ADMIN
}
