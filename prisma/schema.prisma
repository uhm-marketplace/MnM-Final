// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = env("DATABASE_URL")
  // for Vercel
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
}

model Profile {
  id             Int               @id @default(autoincrement())
  email          String            @unique
  firstName      String?
  lastName       String?
  bio            String?
  title          String?
  picture        String?
  interests      ProfileInterest[]
  projects       ProfileProject[]
  ProfileReview  ProfileReview[]
  ProfileProduct ProfileProduct[]
}

model Project {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  homepage    String?
  description String?
  picture     String?
  profiles    ProfileProject[]
  interests   ProjectInterest[]
}

model ProfileProject {
  id        Int     @id @default(autoincrement())
  profileId Int
  projectId Int
  profile   Profile @relation(fields: [profileId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])
}

model Interest {
  id       Int               @id @default(autoincrement())
  name     String            @unique
  profiles ProfileInterest[]
  projects ProjectInterest[]
}

model ProjectInterest {
  id         Int      @id @default(autoincrement())
  projectId  Int
  interestId Int
  project    Project  @relation(fields: [projectId], references: [id])
  interest   Interest @relation(fields: [interestId], references: [id])
}

model ProfileInterest {
  id         Int      @id @default(autoincrement())
  profileId  Int
  interestId Int
  profile    Profile  @relation(fields: [profileId], references: [id])
  interest   Interest @relation(fields: [interestId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  productId Int
  reviewId  Int
  name      String
  review    String
  owner     String
  createdAt DateTime @default(now())
}

model ProductReview {
  id       Int @id @default(autoincrement())
  reviewId Int
}

model ProfileReview {
  id        Int     @id @default(autoincrement())
  profileId Int
  reviewId  Int
  profile   Profile @relation(fields: [profileId], references: [id])
}

model Product {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  price          String              
  description    String?
  picture        String?
  owner          String
  ProfileProduct ProfileProduct[]
}

model ProfileProduct {
  id        Int     @id @default(autoincrement())
  profileId Int
  productId Int
  Profile   Profile @relation(fields: [profileId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}
